"use strict";
/**
 * @fileoverview This file is generated by the Angular template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride}
 */
/* tslint:disable */
Object.defineProperty(exports, "__esModule", { value: true });
var i0 = require("./verify.component.css.shim.ngstyle");
var i1 = require("@angular/core");
var i2 = require("@angular/forms");
var i3 = require("../../../../../../src/app/header/verify/verify.component");
var styles_VerifyComponent = [i0.styles];
exports.RenderType_VerifyComponent = i1.ɵcrt({ encapsulation: 0,
    styles: styles_VerifyComponent, data: {} });
function View_VerifyComponent_0(_l) {
    return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, null, null, 10, 'div', [['class',
                'modal-header']], null, null, null, null, null)),
        (_l()(), i1.ɵted(null, ['\n  '])), (_l()(), i1.ɵeld(0, null, null, 1, 'h4', [['class', 'modal-title']], null, null, null, null, null)), (_l()(), i1.ɵted(null, ['Verify with OTP'])),
        (_l()(), i1.ɵted(null, ['\n  '])), (_l()(), i1.ɵeld(0, null, null, 4, 'button', [['aria-label', 'Close'], ['class', 'close'], ['type', 'button']], null, null, null, null, null)),
        (_l()(), i1.ɵted(null, ['\n    '])), (_l()(), i1.ɵeld(0, null, null, 1, 'span', [['aria-hidden', 'true']], null, null, null, null, null)), (_l()(), i1.ɵted(null, ['×'])), (_l()(),
            i1.ɵted(null, ['\n  '])), (_l()(), i1.ɵted(null, ['\n'])),
        (_l()(), i1.ɵted(null, ['\n'])), (_l()(), i1.ɵeld(0, null, null, 19, 'div', [['class', 'modal-body']], null, null, null, null, null)), (_l()(), i1.ɵted(null, ['\n  '])), (_l()(),
            i1.ɵeld(0, null, null, 16, 'form', [['class', 'form'], ['name',
                    'loginform'], ['novalidate', '']], [[2, 'ng-untouched', null], [2,
                    'ng-touched', null], [2, 'ng-pristine', null], [2, 'ng-dirty',
                    null], [2, 'ng-valid', null], [2, 'ng-invalid', null],
                [2, 'ng-pending', null]], [[null, 'submit'], [null,
                    'reset']], function (_v, en, $event) {
                var ad = true;
                if (('submit' === en)) {
                    var pd_0 = (i1.ɵnov(_v, 16).onSubmit($event) !== false);
                    ad = (pd_0 && ad);
                }
                if (('reset' === en)) {
                    var pd_1 = (i1.ɵnov(_v, 16).onReset() !== false);
                    ad = (pd_1 && ad);
                }
                return ad;
            }, null, null)), i1.ɵdid(16384, null, 0, i2.ɵbf, [], null, null), i1.ɵdid(16384, null, 0, i2.NgForm, [[8,
                null], [8, null]], null, null), i1.ɵprd(2048, null, i2.ControlContainer, null, [i2.NgForm]), i1.ɵdid(16384, null, 0, i2.NgControlStatusGroup, [i2.ControlContainer], null, null), (_l()(), i1.ɵted(null, ['            \n    '])), (_l()(),
            i1.ɵeld(0, null, null, 3, 'div', [['class', 'form-group']], null, null, null, null, null)), (_l()(), i1.ɵted(null, ['\n      '])), (_l()(), i1.ɵeld(0, null, null, 0, 'input', [['aria-invalid',
                'true'], ['class', 'form-control'], ['id', 'phone'], ['message', 'Phone number should be correct and manadatory'],
            ['name', 'text'], ['pattern', '[0-9]{10,10}'], ['placeholder', 'Enter Your Mobile Number'],
            ['required', ''], ['type', 'tel']], null, null, null, null, null)), (_l()(), i1.ɵted(null, ['\n    '])),
        (_l()(), i1.ɵted(null, ['\n    '])), (_l()(), i1.ɵeld(0, null, null, 1, 'button', [['class', 'btn btn-block btn-verify'], ['type', 'submit']], null, [[null, 'click']], function (_v, en, $event) {
            var ad = true;
            var _co = _v.component;
            if (('click' === en)) {
                var pd_0 = (_co.verify() !== false);
                ad = (pd_0 && ad);
            }
            return ad;
        }, null, null)), (_l()(), i1.ɵted(null, ['Verify'])),
        (_l()(), i1.ɵted(null, ['\n    '])), (_l()(), i1.ɵeld(0, null, null, 1, 'p', [['class', 'verify-text']], null, null, null, null, null)), (_l()(), i1.ɵted(null, ['The verify text'])),
        (_l()(), i1.ɵted(null, ['\n  '])), (_l()(), i1.ɵted(null, ['\n'])),
        (_l()(), i1.ɵted(null, ['\n'])), (_l()(), i1.ɵeld(0, null, null, 17, 'div', [['class', 'footer']], null, null, null, null, null)), (_l()(), i1.ɵted(null, ['\n  '])), (_l()(),
            i1.ɵeld(0, null, null, 14, 'ul', [['class', 'term-secton']], null, null, null, null, null)),
        (_l()(), i1.ɵted(null, ['\n    '])), (_l()(), i1.ɵeld(0, null, null, 1, 'li', [], null, null, null, null, null)), (_l()(), i1.ɵted(null, ['By login, you agree to GoParties’s'])),
        (_l()(), i1.ɵted(null, ['\n    '])), (_l()(), i1.ɵeld(0, null, null, 8, 'li', [], null, null, null, null, null)), (_l()(), i1.ɵeld(0, null, null, 2, 'span', [], null, null, null, null, null)),
        (_l()(), i1.ɵeld(0, null, null, 1, 'a', [['class', 'link-color hide-model'],
            ['href', '/tnc'], ['ng-href', '/tnc'], ['target', '_blank']], null, null, null, null, null)), (_l()(), i1.ɵted(null, ['Terms of Service'])), (_l()(), i1.ɵted(null, [' and '])), (_l()(),
            i1.ɵeld(0, null, null, 3, 'span', [], null, null, null, null, null)), (_l()(), i1.ɵted(null, [' '])), (_l()(), i1.ɵeld(0, null, null, 1, 'a', [['class', 'link-color hide-model'],
            ['href', '/privacyPolicy'], ['ng-href', '/privacyPolicy'], ['target', '_blank']], null, null, null, null, null)),
        (_l()(), i1.ɵted(null, ['Privacy Policy'])), (_l()(), i1.ɵted(null, ['\n  '])), (_l()(), i1.ɵted(null, ['\n']))], null, function (_ck, _v) {
        var currVal_0 = i1.ɵnov(_v, 18).ngClassUntouched;
        var currVal_1 = i1.ɵnov(_v, 18).ngClassTouched;
        var currVal_2 = i1.ɵnov(_v, 18).ngClassPristine;
        var currVal_3 = i1.ɵnov(_v, 18).ngClassDirty;
        var currVal_4 = i1.ɵnov(_v, 18).ngClassValid;
        var currVal_5 = i1.ɵnov(_v, 18).ngClassInvalid;
        var currVal_6 = i1.ɵnov(_v, 18).ngClassPending;
        _ck(_v, 14, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6);
    });
}
exports.View_VerifyComponent_0 = View_VerifyComponent_0;
function View_VerifyComponent_Host_0(_l) {
    return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, null, null, 1, 'app-verify', [], null, null, null, View_VerifyComponent_0, exports.RenderType_VerifyComponent)),
        i1.ɵdid(114688, null, 0, i3.VerifyComponent, [], null, null)], function (_ck, _v) {
        _ck(_v, 1, 0);
    }, null);
}
exports.View_VerifyComponent_Host_0 = View_VerifyComponent_Host_0;
exports.VerifyComponentNgFactory = i1.ɵccf('app-verify', i3.VerifyComponent, View_VerifyComponent_Host_0, {}, {}, []);
//# sourceMappingURL=data:application/json;base64,eyJmaWxlIjoiL1VzZXJzL21hYy9Eb2N1bWVudHMvd2ViYXBwL3NyYy9hcHAvaGVhZGVyL3ZlcmlmeS92ZXJpZnkuY29tcG9uZW50Lm5nZmFjdG9yeS50cyIsInZlcnNpb24iOjMsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIm5nOi8vL1VzZXJzL21hYy9Eb2N1bWVudHMvd2ViYXBwL3NyYy9hcHAvaGVhZGVyL3ZlcmlmeS92ZXJpZnkuY29tcG9uZW50LnRzIiwibmc6Ly8vVXNlcnMvbWFjL0RvY3VtZW50cy93ZWJhcHAvc3JjL2FwcC9oZWFkZXIvdmVyaWZ5L3ZlcmlmeS5jb21wb25lbnQuaHRtbCIsIm5nOi8vL1VzZXJzL21hYy9Eb2N1bWVudHMvd2ViYXBwL3NyYy9hcHAvaGVhZGVyL3ZlcmlmeS92ZXJpZnkuY29tcG9uZW50LnRzLlZlcmlmeUNvbXBvbmVudF9Ib3N0Lmh0bWwiXSwic291cmNlc0NvbnRlbnQiOlsiICIsIjxkaXYgY2xhc3M9XCJtb2RhbC1oZWFkZXJcIj5cbiAgPGg0IGNsYXNzPVwibW9kYWwtdGl0bGVcIj5WZXJpZnkgd2l0aCBPVFA8L2g0PlxuICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzcz1cImNsb3NlXCIgYXJpYS1sYWJlbD1cIkNsb3NlXCI+XG4gICAgPHNwYW4gYXJpYS1oaWRkZW49XCJ0cnVlXCI+JnRpbWVzOzwvc3Bhbj5cbiAgPC9idXR0b24+XG48L2Rpdj5cbjxkaXYgY2xhc3M9XCJtb2RhbC1ib2R5XCI+XG4gIDxmb3JtIGNsYXNzPVwiZm9ybVwiIG5hbWU9XCJsb2dpbmZvcm1cIj4gICAgICAgICAgICBcbiAgICA8ZGl2IGNsYXNzPVwiZm9ybS1ncm91cFwiPjwhLS0gaW5wdXQtbG9naW4gLS0+XG4gICAgICA8aW5wdXQgbmFtZT1cInRleHRcIiBwYXR0ZXJuPVwiWzAtOV17MTAsMTB9XCIgdHlwZT1cInRlbFwiIGNsYXNzPVwiZm9ybS1jb250cm9sXCIgaWQ9XCJwaG9uZVwiIHBsYWNlaG9sZGVyPVwiRW50ZXIgWW91ciBNb2JpbGUgTnVtYmVyXCIgbWVzc2FnZT1cIlBob25lIG51bWJlciBzaG91bGQgYmUgY29ycmVjdCBhbmQgbWFuYWRhdG9yeVwiIHJlcXVpcmVkPVwiXCIgYXJpYS1pbnZhbGlkPVwidHJ1ZVwiPlxuICAgIDwvZGl2PlxuICAgIDxidXR0b24gdHlwZT1cInN1Ym1pdFwiIGNsYXNzPVwiYnRuIGJ0bi1ibG9jayBidG4tdmVyaWZ5XCIgKGNsaWNrKT1cInZlcmlmeSgpXCI+VmVyaWZ5PC9idXR0b24+XG4gICAgPHAgY2xhc3M9XCJ2ZXJpZnktdGV4dFwiPlRoZSB2ZXJpZnkgdGV4dDwvcD5cbiAgPC9mb3JtPlxuPC9kaXY+XG48ZGl2IGNsYXNzPVwiZm9vdGVyXCI+XG4gIDx1bCBjbGFzcz1cInRlcm0tc2VjdG9uXCI+XG4gICAgPGxpPkJ5IGxvZ2luLCB5b3UgYWdyZWUgdG8gR29QYXJ0aWVz4oCZczwvbGk+XG4gICAgPGxpPjxzcGFuPjxhIG5nLWhyZWY9XCIvdG5jXCIgY2xhc3M9XCJsaW5rLWNvbG9yIGhpZGUtbW9kZWxcIiB0YXJnZXQ9XCJfYmxhbmtcIiBocmVmPVwiL3RuY1wiPlRlcm1zIG9mIFNlcnZpY2U8L2E+PC9zcGFuPiBhbmQgPHNwYW4+IDxhIG5nLWhyZWY9XCIvcHJpdmFjeVBvbGljeVwiIGNsYXNzPVwibGluay1jb2xvciBoaWRlLW1vZGVsXCIgdGFyZ2V0PVwiX2JsYW5rXCIgaHJlZj1cIi9wcml2YWN5UG9saWN5XCI+UHJpdmFjeSBQb2xpY3k8L2E+PC9zcGFuPjwvbGk+XG4gIDwvdWw+XG48L2Rpdj4iLCI8YXBwLXZlcmlmeT48L2FwcC12ZXJpZnk+Il0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7OztvQkNBQTtNQUFBO01BQTBCLHlDQUN4QjtVQUFBO1VBQUEsOEJBQXdCO01BQW9CLHlDQUM1QztVQUFBO1VBQUE7TUFBdUQsMkNBQ3JEO1VBQUE7VUFBQSw4QkFBeUIsc0NBQWM7aUJBQUEsMEJBQ2hDO01BQ0wsdUNBQ047VUFBQTtVQUFBLDhCQUF3Qix5Q0FDdEI7aUJBQUE7Y0FBQTtjQUFBO2NBQUE7Y0FBQTtjQUFBO1lBQUE7WUFBQTtjQUFBO2NBQUE7WUFBQTtZQUFBO2NBQUE7Y0FBQTtZQUFBO1lBQUE7VUFBQSx1Q0FBQTtVQUFBLG9DQUFBO1VBQUEsc0VBQUE7VUFBQSxvRUFBQTtVQUFBO1VBQUEsZUFBb0MsdURBQ2xDO2lCQUFBO2NBQUEsMERBQTRDO1VBQUEsZUFDMUM7VUFBQTtVQUFBO1VBQUE7VUFBQSw4QkFBb047TUFDaE4sMkNBQ047VUFBQTtVQUFBO1lBQUE7WUFBQTtZQUF1RDtjQUFBO2NBQUE7WUFBQTtZQUF2RDtVQUFBLGdDQUEwRTtNQUFlLDJDQUN6RjtVQUFBO1VBQUEsOEJBQXVCO01BQW1CLHlDQUNyQztNQUNILHVDQUNOO1VBQUE7VUFBQSw4QkFBb0IseUNBQ2xCO2lCQUFBO2NBQUE7TUFBd0IsMkNBQ3RCO1VBQUE7VUFBQSxnQkFBSTtNQUF1QywyQ0FDM0M7VUFBQTtVQUFBLGdCQUFJO1VBQUE7TUFBTTtVQUFBO1VBQUEsNENBQTRFO1VBQUEsdUJBQTJCLDBDQUFLO2lCQUFBO2NBQUEsMERBQU07VUFBQSxRQUFDO1VBQUE7VUFBQTtNQUFnRyxtREFBOEI7VUFBQSxXQUN4UDtJQVpMO0lBQUE7SUFBQTtJQUFBO0lBQUE7SUFBQTtJQUFBO0lBQUEsWUFBQSxxRUFBQTs7OztvQkNQRjtNQUFBO2FBQUE7VUFBQTtJQUFBOzs7OyJ9
//# sourceMappingURL=data:application/json;charset=utf-8;base64,